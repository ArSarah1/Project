pipeline {
    agent { label 'agent1' }
   environment {
        // Specify the SonarQube access token using Jenkins credentials
        SONAR_TOKEN = credentials('sonar')
        // Specify the URL of your SonarQube server
        SONAR_HOST_URL = 'http://localhost:9000'
    }
    stages {
stage("GIT CHECKOUT YOUR BRANCH") {
    steps {
        echo "Getting Project from Git"
        git branch: "master",
            url: "https://github.com/ArSarah1/Project.git"
    }
}
        stage('MAVEN') {
            steps {
                sh 'mvn compile'
                sh 'mvn --version'
            }
        }
stage('Coverage Test') {
            steps {
                script {
                    sh 'mvn clean test -P test jacoco:report'
                }
            }
        }
  
    stage('BUILD ARTIFACT') {
           steps {
               sh 'mvn package -DskipTests'
           }
       }
stage(' BUILD DOCKER IMAGE') {
    steps {
        script {
            // Build the Docker image
            sh 'docker build -t arsarah/alpine1.0.0:latest .'
            // Log in to Docker Hub (if necessary)
            sh 'docker login -u arsarah -p 000000000'
            // Push the Docker image to Docker Hub
            sh 'docker push arsarah/alpine1.0.0:latest'
        }
    }
}
 stage('SonarQube Analysis') {
            steps {
                script {
                    sh '''
                         mvn compile sonar:sonar \
                        -Dsonar.host.url=http://localhost:9000/ \
                        -Dsonar.organization=Sonar \
                        -Dsonar.projectKey=Sonar \
                        -Dsonar.login=a7476c88f53a162a82d8149b0052207b97b69>                        
                        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/> 
                        '''        
                }
            }
        }
    }
       
    

stage('Docker Compose') {
    steps {
        script {
            // Execute Docker Compose commands
            sh '/home/sarah/Project/docker-compose pull'
            sh '/home/sarah/Project/docker-compose up -d'
        }
    }
}



  }
}


