pipeline {
    agent { label 'agent1' }
    
    stages {
stage("GIT CHECKOUT YOUR BRANCH") {
    steps {
        echo "Getting Project from Git"
        git branch: "master",
            url: "https://github.com/ArSarah1/Project.git"
    }
}
        stage('MAVEN') {
            steps {
                sh 'mvn compile'
                sh 'mvn --version'
            }
        }
stage('COVERAGE TEST') {
            steps {
                script {
                    sh 'mvn clean test -P test jacoco:report'
                }
            }
        }


stage('SonarQube') {
            steps {
                script {
                    sh 'mvn compile sonar:sonar -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.organization=sarah -Dsonar.projectKey=sarah_project -Dsonar.login=c6de14592f1e2d37a87f488d8e4a4f2b0c0a0cc6 -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml'
                }
            }
        }

  
    stage('BUILD ARTIFACT') {
           steps {
               sh 'mvn package -DskipTests'
           }
       }
stage(' BUILD DOCKER IMAGE') {
    steps {
        script {
            
            sh 'docker build -t arsarah/alpine1.0.0:latest .' 
            sh 'docker login -u arsarah -p 000000000' 
            sh 'docker push arsarah/alpine1.0.0:latest'
        }
    }
} 

stage('Docker Compose') {
            steps {
                script {
                    sh 'docker-compose up --build -d'
                }
            }
        }


}
 post {
        success {
            emailext subject: 'Build Success Notification',
                      body: 'Your Jenkins build succeeded. Congratulations!' , 
                      to: 'arouri.sarah@esprit.tn'
              }
           }
        }
     
}
