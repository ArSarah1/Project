pipeline {
    agent { label 'agent1' }
    stages {
stage("GIT") {
    steps {
        echo "Getting Project from Git"
        git branch: "master",
            url: "https://github.com/ArSarah1/Project.git"
    }
}
        stage('Maven') {
            steps {
                sh 'mvn --version'
            }
        }
stage('Coverage Test') {
            steps {
                script {
                    sh 'mvn clean test -P test jacoco:report'
                }
            }
        }
  
    stage('Build Artifact') {
           steps {
               sh 'mvn package -DskipTests'
           }
       }
stage(' Docker Image') {
    steps {
        script {
            // Build the Docker image
            sh 'docker build -t arsarah/alpine1.0.0:latest .'
            // Log in to Docker Hub (if necessary)
            sh 'docker login -u arsarah -p 000000000'
            // Push the Docker image to Docker Hub
            sh 'docker push arsarah/alpine1.0.0:latest'
        }
    }
}
pipeline {
    agent any
    
    stages {
        stage('Build and SonarQube Scan') {
            environment {
                SONAR_TOKEN = credentials('sonar')
                SONAR_HOST_URL = 'http://localhost:9000'
            }
            steps {
                withSonarQubeEnv('sonar') {
                    sh 'mvn clean package sonar:sonar'
                }
            }
        }
    }
}

stage('Docker Compose') {
    steps {
        script {
            // Execute Docker Compose commands
            sh '/home/sarah/Project/docker-compose pull'
            sh '/home/sarah/Project/docker-compose up -d'
        }
    }
}



  }
}


